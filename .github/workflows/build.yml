name: build

on:
  pull_request:
    types: [opened, synchronize, reopened]


# automatically cancel previous runs on the same PR
# https://stackoverflow.com/questions/66335225/how-to-cancel-previous-runs-in-the-pr-when-you-push-new-commitsupdate-the-curre/67939898#67939898
concurrency:
  group: ${{ github.workflow }}-${{ github.event.pull_request.number || github.sha }}
  cancel-in-progress: true

jobs:
  docker-build:
    name: Build Docker ${{ fromJson(matrix.image).dockerfile }}
    runs-on: postgres-builder-32core
    timeout-minutes: 120
    strategy:
      matrix:
        image:
          - '{"dockerfile": "./Dockerfile",                 "context": ".", "platforms": "linux/amd64" }'
          - '{"dockerfile": "./Dockerfile_ami_buildscript", "context": ".", "platforms": "linux/amd64" }'
          - '{"dockerfile": "./Dockerfile_ami_2.3.15",      "context": ".", "platforms": "linux/amd64" }'
    steps:
      - name: Checkout
        uses: actions/checkout@c85c95e3d7251135ab7dc9ce3241c5835cc595a9 # pin@v3
        with:
          # https://github.com/actions/checkout/issues/626
          # This is correct, because we're using a merge queue (mergify) which only merges when built against the latest target branch.
          # https://docs.mergify.com/actions/queue/
          ref: ${{ github.event.pull_request.head.sha }}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Docker Cache
        uses: actions/cache@v3
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-buildx

      - name: Docker build
        uses: docker/build-push-action@v4
        with:
          context: ${{ fromJson(matrix.image).context }}
          file: ${{ fromJson(matrix.image).dockerfile }}
          platforms: ${{ fromJson(matrix.image).platforms }}
          cache-from: type=local,src=/tmp/.buildx-cache
          cache-to: type=local,dest=/tmp/.buildx-cache,mode=max
          push: false
